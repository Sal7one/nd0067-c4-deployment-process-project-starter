version: 2.1
orbs:
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
jobs:
  build:
    docker:
      - image: "cimg/node:14.15"
    steps:
      - node/install:
          node-version: '14.15'         
      - checkout
      - aws-cli/setup
      - run:
          name: Install Front-End Dependencies
          command: |
            echo "NODE --version" 
            echo $(node --version)
            echo "NPM --version" 
            echo $(npm --version)
            npm run frontend:install
      - run:
          name: Install API Dependencies
          command: |
           npm run api:install
      - run:
          name: Front-End Lint
          command: |
            npm run frontend:lint

      - run:
          name: Front-End Build
          command: |
            npm run frontend:build

      - run:
          name: API Build
          command: |
           npm run api:build
  deploy:
    docker:
      - image: "cimg/base:stable"
    steps:
      - node/install:
          node-version: '14.15' 
      - eb/setup
      - aws-cli/setup
      - checkout
      - run:
          name: Deploy App
          # eb environment 
          # eb creds
          # delpoy
          command: |
            cd udagram/udagram-api/
            eb setenv AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
            eb setenv AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
            eb setenv POSTGRES_USERNAME=$POSTGRES_USERNAME
            eb setenv POSTGRES_PASSWORD=$POSTGRES_PASSWORD
            eb setenv POSTGRES_HOST=$POSTGRES_HOST
            eb setenv POSTGRES_DB=$POSTGRES_DB
            eb setenv AWS_BUCKET=$AWS_BUCKET
            eb setenv AWS_REGION=$AWS_REGION
            eb setenv AWS_PROFILE=$AWS_PROFILE
            eb setenv JWT_SECRET=$JWT_SECRET
            eb setenv URL=$URL
            eb setenv PORT=5432
            cd ../..
            npm run deploy
            
workflows:
  udagram:
    jobs:
      - build
      - hold:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold
